/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Paiement as PrismaPaiement } from "@prisma/client";

export class PaiementServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.PaiementCountArgs, "select">): Promise<number> {
    return this.prisma.paiement.count(args);
  }

  async paiements<T extends Prisma.PaiementFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.PaiementFindManyArgs>
  ): Promise<PrismaPaiement[]> {
    return this.prisma.paiement.findMany<Prisma.PaiementFindManyArgs>(args);
  }
  async paiement<T extends Prisma.PaiementFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.PaiementFindUniqueArgs>
  ): Promise<PrismaPaiement | null> {
    return this.prisma.paiement.findUnique(args);
  }
  async createPaiement<T extends Prisma.PaiementCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PaiementCreateArgs>
  ): Promise<PrismaPaiement> {
    return this.prisma.paiement.create<T>(args);
  }
  async updatePaiement<T extends Prisma.PaiementUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PaiementUpdateArgs>
  ): Promise<PrismaPaiement> {
    return this.prisma.paiement.update<T>(args);
  }
  async deletePaiement<T extends Prisma.PaiementDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.PaiementDeleteArgs>
  ): Promise<PrismaPaiement> {
    return this.prisma.paiement.delete(args);
  }
}
